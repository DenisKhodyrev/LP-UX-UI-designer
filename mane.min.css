*{padding:0;margin:0;border:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}:active,:focus,a:active,a:focus{outline:0}aside,footer,header,nav{display:block}html{height:100%;font-size:14px}body,html{width:100%;line-height:1;-ms-text-size-adjust:100%;-moz-text-size-adjust:100%;-webkit-text-size-adjust:100%}button,input,textarea{font-family:inherit}input::-ms-clear{display:none}button{cursor:pointer}button::-moz-focus-inner{padding:0;border:0}a,a:hover,a:visited{text-decoration:none}ul li{list-style:none}img{vertical-align:top}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:400}body{font:18px/1 'Roboto';height:100%;color:#070707}.wrapper{min-height:100%;overflow:hidden;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}._container{max-width:1000px;margin:0 auto;padding:0 30px}.mane{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}._active,.menu__item a:active,a:hover{color:#070707}.header{width:100%}.menu,.menu__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.menu{height:90px;position:relative;border-bottom:1px solid #828282}.menu__list{width:100%;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-column-gap:40px;-moz-column-gap:40px;column-gap:40px;row-gap:15px}.cover__lang a,.menu__item a{color:#828282}.menu__mobile{display:none}.cover{margin:40px 0 100px}.cover__text-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;margin:0 0 50px;-webkit-column-gap:30px;-moz-column-gap:30px;column-gap:30px}.cover__title{font-size:47px}.cover__subtitle{line-height:120%}.cover__lang{font-size:16px;-webkit-writing-mode:vertical-lr;-ms-writing-mode:tb-lr;writing-mode:vertical-lr;-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.cover__img{height:386px;overflow:hidden}.cover__img-mobile{display:none}.cover__img img,.cover__img-mobile img{width:100%;height:100%;-o-object-fit:none;object-fit:none}.about{background:#f6f6f6;padding:100px 0}.about__container{text-align:center;max-width:485px}.about__title{font-size:34px;margin-bottom:40px}.skills{padding:100px 0;text-align:center}.skills__title{font-size:34px;margin-bottom:70px}.skills__text{margin-bottom:80px}.skills__wrapper{margin:auto;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-column-gap:90px;-moz-column-gap:90px;column-gap:90px;-ms-flex-wrap:wrap;flex-wrap:wrap}.skills__item{max-width:166px;margin:0 auto 80px}.skill{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.skills__item:nth-last-of-type(1){margin:0 auto}.skill span{font-size:14px;max-width:80px;color:#828282;margin:24px auto 40px}.portfolio{background:#f6f6f6;padding:100px 0}.portfolio__container{text-align:center}.portfolio__item{margin-bottom:100px}.portfolio__item:nth-last-of-type(1){margin-bottom:0}.portfolio__title{font-size:34px;margin-bottom:70px}.portfolio__image{margin-bottom:45px}.portfolio__image img{width:100%}.portfolio__item a{color:#070707;text-decoration:underline}.footer{margin:100px 0}.footer__container{text-align:center}.footer__title{font-size:34px;margin-bottom:40px}.footer__subtitle{margin-bottom:30px}.footer__button{background:#000;display:inline-block;margin-bottom:85px;border-radius:50px;color:#fff;padding:13px 29px;text-align:center}.footer__social-networks{max-width:340px;margin:0 auto 45px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.footer__signature{font-size:14px;color:#828282}@media (max-width:375px){.header,.menu__btn span{position:absolute}.header__container{position:relative}.header__menu{display:none}.menu__btn-container{position:fixed;width:30px;top:45px;right:30px;z-index:999}.menu__btn{margin:0;min-width:30px;height:30px;cursor:pointer;position:relative}.menu__btn span{background-color:#000;width:30px;height:2px;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);-webkit-transition:all .5s;-o-transition:all .5s;transition:all .5s}.menu__btn span:nth-of-type(2){top:calc(40% - 5px)}.menu__btn span:nth-of-type(3){top:calc(60% + 5px)}.active{position:fixed}.active span:nth-of-type(1){display:none;background-color:#828282}.active span:nth-of-type(2),.active span:nth-of-type(3){top:50%;-webkit-transform:translate(-50%,0) rotate(45deg);-ms-transform:translate(-50%,0) rotate(45deg);transform:translate(-50%,0) rotate(45deg);background-color:#828282}.active span:nth-of-type(3){-webkit-transform:translate(-50%,0) rotate(-45deg);-ms-transform:translate(-50%,0) rotate(-45deg);transform:translate(-50%,0) rotate(-45deg)}.menu__mobile{background-color:#fff;width:100%;height:1000px;margin-left:-30px;margin-right:-30px;z-index:50;top:-1000px;-webkit-transition:all .5s;-o-transition:all .5s;transition:all .5s;position:fixed}.menu__mobile-open{display:block;top:0}.menu__mobile__list{padding-top:45px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;row-gap:70px}.menu__mobile__item a{color:#828282;font-size:34px}.menu__mobile__item a:active{color:#000}.menu__mobile-item li{margin-bottom:16px;z-index:-999}.menu__mobile-item2{color:#f58220;font-size:19px;margin-bottom:40px;z-index:-999}.cover{margin:40px 0 80px}.cover__text-container{display:block;margin:0 0 35px}.cover__title{max-width:calc(100% - 90px);margin-bottom:25px;line-height:125%}.cover__img,.cover__lang{display:none}.cover__img-mobile{display:block;height:478px;overflow:hidden}.skills__text,.skills__title{margin-bottom:50px}.about,.portfolio,.skills{padding:80px 0}.portfolio__item{margin-bottom:80px}.footer{margin:80px 0 90px}.footer__button{margin-bottom:50px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */